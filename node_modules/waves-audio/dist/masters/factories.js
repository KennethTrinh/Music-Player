'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _map = require('babel-runtime/core-js/map');

var _map2 = _interopRequireDefault(_map);

exports.getScheduler = getScheduler;
exports.getSimpleScheduler = getSimpleScheduler;

var _audioContext = require('../core/audioContext');

var _audioContext2 = _interopRequireDefault(_audioContext);

var _wavesMasters = require('waves-masters');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var schedulerMap = new _map2.default();
var simpleSchedulerMap = new _map2.default();

/**
 * Returns a unique instance of `Scheduler`
 *
 * [example]{@link https://rawgit.com/wavesjs/waves-audio/master/examples/scheduler/index.html}}
 *
 * @global
 * @function
 * @returns {Scheduler}
 * @see Scheduler
 */
function getScheduler() {
  var audioContext = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _audioContext2.default;

  var scheduler = schedulerMap.get(audioContext);

  if (!scheduler) {
    var getTimeFunction = function getTimeFunction() {
      return audioContext.currentTime;
    };
    scheduler = new _wavesMasters.Scheduler(getTimeFunction);

    schedulerMap.set(audioContext, scheduler);
  }

  return scheduler;
};

/**
 * Returns a unique instance of `SimpleScheduler`
 *
 * [example]{@link https://rawgit.com/wavesjs/waves-audio/master/examples/simple-scheduler/index.html}}
 *
 * @global
 * @function
 * @returns {SimpleScheduler}
 * @see SimpleScheduler
 */
function getSimpleScheduler() {
  var audioContext = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _audioContext2.default;

  var simpleScheduler = simpleSchedulerMap.get(audioContext);

  if (!simpleScheduler) {
    var getTimeFunction = function getTimeFunction() {
      return audioContext.currentTime;
    };
    simpleScheduler = new _wavesMasters.SimpleScheduler(getTimeFunction);

    simpleSchedulerMap.set(audioContext, simpleScheduler);
  }

  return simpleScheduler;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZhY3Rvcmllcy5qcyJdLCJuYW1lcyI6WyJnZXRTY2hlZHVsZXIiLCJnZXRTaW1wbGVTY2hlZHVsZXIiLCJzY2hlZHVsZXJNYXAiLCJzaW1wbGVTY2hlZHVsZXJNYXAiLCJhdWRpb0NvbnRleHQiLCJkZWZhdWx0QXVkaW9Db250ZXh0Iiwic2NoZWR1bGVyIiwiZ2V0IiwiZ2V0VGltZUZ1bmN0aW9uIiwiY3VycmVudFRpbWUiLCJTY2hlZHVsZXIiLCJzZXQiLCJzaW1wbGVTY2hlZHVsZXIiLCJTaW1wbGVTY2hlZHVsZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7UUFnQmdCQSxZLEdBQUFBLFk7UUF1QkFDLGtCLEdBQUFBLGtCOztBQXZDaEI7Ozs7QUFDQTs7OztBQUVBLElBQU1DLGVBQWUsbUJBQXJCO0FBQ0EsSUFBTUMscUJBQXFCLG1CQUEzQjs7QUFFQTs7Ozs7Ozs7OztBQVVPLFNBQVNILFlBQVQsR0FBMEQ7QUFBQSxNQUFwQ0ksWUFBb0MsdUVBQXJCQyxzQkFBcUI7O0FBQy9ELE1BQUlDLFlBQVlKLGFBQWFLLEdBQWIsQ0FBaUJILFlBQWpCLENBQWhCOztBQUVBLE1BQUksQ0FBQ0UsU0FBTCxFQUFnQjtBQUNkLFFBQU1FLGtCQUFrQixTQUFsQkEsZUFBa0I7QUFBQSxhQUFNSixhQUFhSyxXQUFuQjtBQUFBLEtBQXhCO0FBQ0FILGdCQUFZLElBQUlJLHVCQUFKLENBQWNGLGVBQWQsQ0FBWjs7QUFFQU4saUJBQWFTLEdBQWIsQ0FBaUJQLFlBQWpCLEVBQStCRSxTQUEvQjtBQUNEOztBQUVELFNBQU9BLFNBQVA7QUFDRDs7QUFFRDs7Ozs7Ozs7OztBQVVPLFNBQVNMLGtCQUFULEdBQWdFO0FBQUEsTUFBcENHLFlBQW9DLHVFQUFyQkMsc0JBQXFCOztBQUNyRSxNQUFJTyxrQkFBa0JULG1CQUFtQkksR0FBbkIsQ0FBdUJILFlBQXZCLENBQXRCOztBQUVBLE1BQUksQ0FBQ1EsZUFBTCxFQUFzQjtBQUNwQixRQUFNSixrQkFBa0IsU0FBbEJBLGVBQWtCO0FBQUEsYUFBTUosYUFBYUssV0FBbkI7QUFBQSxLQUF4QjtBQUNBRyxzQkFBa0IsSUFBSUMsNkJBQUosQ0FBb0JMLGVBQXBCLENBQWxCOztBQUVBTCx1QkFBbUJRLEdBQW5CLENBQXVCUCxZQUF2QixFQUFxQ1EsZUFBckM7QUFDRDs7QUFFRCxTQUFPQSxlQUFQO0FBQ0QiLCJmaWxlIjoiZmFjdG9yaWVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRlZmF1bHRBdWRpb0NvbnRleHQgZnJvbSAnLi4vY29yZS9hdWRpb0NvbnRleHQnO1xuaW1wb3J0IHsgU2NoZWR1bGVyLCBTaW1wbGVTY2hlZHVsZXIgfSBmcm9tICd3YXZlcy1tYXN0ZXJzJztcblxuY29uc3Qgc2NoZWR1bGVyTWFwID0gbmV3IE1hcCgpO1xuY29uc3Qgc2ltcGxlU2NoZWR1bGVyTWFwID0gbmV3IE1hcCgpO1xuXG4vKipcbiAqIFJldHVybnMgYSB1bmlxdWUgaW5zdGFuY2Ugb2YgYFNjaGVkdWxlcmBcbiAqXG4gKiBbZXhhbXBsZV17QGxpbmsgaHR0cHM6Ly9yYXdnaXQuY29tL3dhdmVzanMvd2F2ZXMtYXVkaW8vbWFzdGVyL2V4YW1wbGVzL3NjaGVkdWxlci9pbmRleC5odG1sfX1cbiAqXG4gKiBAZ2xvYmFsXG4gKiBAZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtTY2hlZHVsZXJ9XG4gKiBAc2VlIFNjaGVkdWxlclxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0U2NoZWR1bGVyKGF1ZGlvQ29udGV4dCA9IGRlZmF1bHRBdWRpb0NvbnRleHQpIHtcbiAgbGV0IHNjaGVkdWxlciA9IHNjaGVkdWxlck1hcC5nZXQoYXVkaW9Db250ZXh0KTtcblxuICBpZiAoIXNjaGVkdWxlcikge1xuICAgIGNvbnN0IGdldFRpbWVGdW5jdGlvbiA9ICgpID0+IGF1ZGlvQ29udGV4dC5jdXJyZW50VGltZTtcbiAgICBzY2hlZHVsZXIgPSBuZXcgU2NoZWR1bGVyKGdldFRpbWVGdW5jdGlvbik7XG5cbiAgICBzY2hlZHVsZXJNYXAuc2V0KGF1ZGlvQ29udGV4dCwgc2NoZWR1bGVyKTtcbiAgfVxuXG4gIHJldHVybiBzY2hlZHVsZXI7XG59O1xuXG4vKipcbiAqIFJldHVybnMgYSB1bmlxdWUgaW5zdGFuY2Ugb2YgYFNpbXBsZVNjaGVkdWxlcmBcbiAqXG4gKiBbZXhhbXBsZV17QGxpbmsgaHR0cHM6Ly9yYXdnaXQuY29tL3dhdmVzanMvd2F2ZXMtYXVkaW8vbWFzdGVyL2V4YW1wbGVzL3NpbXBsZS1zY2hlZHVsZXIvaW5kZXguaHRtbH19XG4gKlxuICogQGdsb2JhbFxuICogQGZ1bmN0aW9uXG4gKiBAcmV0dXJucyB7U2ltcGxlU2NoZWR1bGVyfVxuICogQHNlZSBTaW1wbGVTY2hlZHVsZXJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFNpbXBsZVNjaGVkdWxlcihhdWRpb0NvbnRleHQgPSBkZWZhdWx0QXVkaW9Db250ZXh0KSB7XG4gIGxldCBzaW1wbGVTY2hlZHVsZXIgPSBzaW1wbGVTY2hlZHVsZXJNYXAuZ2V0KGF1ZGlvQ29udGV4dCk7XG5cbiAgaWYgKCFzaW1wbGVTY2hlZHVsZXIpIHtcbiAgICBjb25zdCBnZXRUaW1lRnVuY3Rpb24gPSAoKSA9PiBhdWRpb0NvbnRleHQuY3VycmVudFRpbWU7XG4gICAgc2ltcGxlU2NoZWR1bGVyID0gbmV3IFNpbXBsZVNjaGVkdWxlcihnZXRUaW1lRnVuY3Rpb24pO1xuXG4gICAgc2ltcGxlU2NoZWR1bGVyTWFwLnNldChhdWRpb0NvbnRleHQsIHNpbXBsZVNjaGVkdWxlcik7XG4gIH1cblxuICByZXR1cm4gc2ltcGxlU2NoZWR1bGVyO1xufTtcbiJdfQ==